//-------------------------------------------------------------------------------------------------------------------------------------------------

// 프로그래밍 팁
// 남의 코드를 가져올 때 <script> 태그에 src="코드 경로"로 불러온다.

//-------------------------------------------------------------------------------------------------------------------------------------------------

// REACT

// React 사용 목적
// React는 자바스크립트이다.
// React는 데이터 중심으로 움직인다.
// React의 주 목적은 데이터와 화면을 일치시키는 것이다(데이터 바뀜 -> 화면 자동으로 바뀜).

// React 주의사항
// React에서는 기존 html 태그는 소문자로, 사용자가 만든 컴포넌트는 대문자로 시작해야한다.
// React에서는 닫는 태그를 작성하지 않으면 에러가 발생한다.
// 문자열은 ""로, 자바스크립트 코드는 {}로 묶어주어야 한다.
// 반환하는 값이 여러 줄일 경우 소괄호로 묶어준다(return (값);).
// return에는 태그가 하나만 와야 한다(여러 개 태그 반환하는 경우에는 <></>(fragment)로 묶어주면 됨).
// react에서는 스테이트 객체를 함부로 바꾸지 말고 복사해서 수정해야 한다(불변성).
// ex)
// this.state.liked = true; // (X)
// this.setState({liked: true}); // (O) : 스테이트를 수정하는 방법(setState 메서드)

// pop, push, shift, unshift, splice -> 배열을 직접적으로 수정(불변성을 훼손시킴)
// splice, concat -> 새로운 배열을 만들어냄(불변성을 훼손시키지 않음)

// JavaScript : 화면이 어떻게 바뀔지 상상 -> 화면에 있는 데이터 자바스크립트로 바꿔주기
// React : 데이터가 어떻게 바뀔지 상상 -> 화면을 바꿔주기

// React 구성요소
// 컴포넌트(component) : 데이터와 화면을 하나로 묶어놓은 것(사용자 정의 태그).
// 스테이트(state) : 데이터(화면의 바뀔 부분을 스테이트로 만들어 주면 됨).
// 화면(screen) : render의 return 부분.

// React 방식(class, function)
// react를 사용하는 방법은 함수 방식과 클래스 방식으로 두 가지이다.
// 클래스 방식은 ErrorBoundary에서만 사용되고 거의 사용되지 않는다.

// ErrorBoundary : https://velog.io/@bbaa3218/React-%EC%97%90%EB%9F%AC-%EB%B0%94%EC%9A%B4%EB%8D%94%EB%A6%ACError-Boundary

// 코드
// ReactDOM.render(<LikeButton />, document.querySelector('#root')); // React 17버전 코드
// ReactDOM.createRoot(document.querySelector('#root')).render(<LikeButton />); // React 18버전 코드

// {this.state.liked ? 'Liked' : 'Like!'} // 조건문 대신 삼항 연산자를 사용
// {[1,2,3].map((i)=>{return <div>i<div>;})} // 반복문 대신 배열 map 메서드를 사용

//

//-------------------------------------------------------------------------------------------------------------------------------------------------

// JSX

// JavaScript + XML -> 자바스크립트이지만 형태는 html과 비슷한 문법

// 기존의 React.createElement() 대신에 html의 태그 문법으로 작성한다.

//-------------------------------------------------------------------------------------------------------------------------------------------------

// Babel 라이브러리

// JSX를 만나면 React.createElement()로 바꿔줌.

// babel 라이브러리 불러오기
// 1) <head> 태그에 아래 코드 추가.
// <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
// 2) babel 라이브러리 적용할 <script> 태그에 아래와 같이 type 속성 적용.
// <script type="text/babel">

//-------------------------------------------------------------------------------------------------------------------------------------------------
