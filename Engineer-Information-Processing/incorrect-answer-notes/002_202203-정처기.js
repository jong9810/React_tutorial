// 2022년 03월 정보처리기사 필기
//-------------------------------------------------------------------------------------------------------------------------------------------------

// 소프트웨어 설계

// 1. UI 설계 시 오류 메시지나 경고에 관한 지침
// (1) 메시지는 이해하기 쉬워야 한다. - 직관성
// (2) 오류로부터 회복을 위한 구체적인 설명이 제공되어야 한다. - 유효성
// (3) 오류로 인해 발생될 수 있는 부정적인 내용을 적극적으로 사용자들에게 알려야 한다. - 학습성
// (X) 소리나 색의 사용을 줄이고 텍스트로만 전달하도록 한다.

// 2. 애자일(Agile) 소프트웨어 개발에 대한 설명
// (1) 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.
// (X) 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다. -> 포괄적인 문서보다는 동작하는 소프트웨어를 가치 있게 여긴다.
// (3) 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.
// (4) 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다.

// 3. 소프트웨어 설계에서 요구사항 분석에 대한 설명
// (1) 소프트웨어가 무엇을 해야하는가를 추적하여 요구사항 명세를 작성하는 작업이다.
// (2) 사용자의 요구를 추출하여 목표를 정하고 어떤 방식으로 해결할 것인지 결정하는 단계이다.
// (X) 소프트웨어 시스템이 사용되는 동안 발견되는 오류를 정리하는 단계이다.
// (4) 소프트웨어 개발의 출발점이면서 실질적인 첫 번째 단계이다.
// <해설>
// - 요구사항 분석 프로세스
// (요구사항)도출 -> (요구사항)분석 -> (요구사항)명세 -> (요구사항)확인

// 4. 객체지향 기법에서 상위 클래스의 메소드와 속성을 하위 클래스가 물려받는 것
// (X) Abstraction - 추상화
// (X) Polymorphism - 다형성
// (X) Encapsulation - 캡슐화
// (4) Inheritance - 상속
// <해설>
// - Object-Oriented-Programming.js 참고

//-------------------------------------------------------------------------------------------------------------------------------------------------

// 소프트웨어 개발

// 21.

//-------------------------------------------------------------------------------------------------------------------------------------------------

// 데이터베이스 구축

// 41.

//-------------------------------------------------------------------------------------------------------------------------------------------------

// 프로그래밍 언어 활용

// 61.

//-------------------------------------------------------------------------------------------------------------------------------------------------

// 정보시스템 구축관리

// 81.

//-------------------------------------------------------------------------------------------------------------------------------------------------
