// - 인터페이스(Interface) : 서로 다른 두 시스템이나 소프트웨어 등을 이어주는 부분 또는 접속 장치를 의미한다.

// User Interface(UI)
// 사람(사용자)과 사물 또는 시스템, 기계, 컴퓨터 프로그램 등 사이에서 의사소통을 할 수 있도록
// 일시적 또는 영구적인 접근을 목적으로 만들어진 물리적, 가상적 매개체를 뜻한다. 사용자 인터페이스는 사람들이 컴퓨터와 상호 작용하는 시스템이다.
// 사용자 인터페이스는 물리적인 하드웨어와 논리적인 소프트웨어 요소를 포함한다.
// 사용자 인터페이스는 크게 다음과 같은 수단을 사용한다.
// 1) 입력 : 사용자가 시스템을 조작할 수 있게 한다.
// 2) 출력 : 시스템이 사용자가 이용한 것에 대한 결과를 표시한다.
// 3) 삭제 : 시스템이 사용자가 잘못한 것을 삭제한다.
// 사용자 인터페이스를 판단하는 기준으로 사용성이 있다.
// 좋은 사용자 인터페이스는 심리학과 생리학에 기반하여,
// 사용자가 필요한 요소를 쉽게 찾고 사용하며 그 요소로부터 명확하게 의도한 결과를 쉽게 얻어 낼 수 있어야 한다.

// - UI와 관련된 개념
// 1) Feedback
// 처리된 결과를 측정하고 목표에 도달되었는지를 검사하며 불충분한 경우 다시 입력하는 요소
// 시스템의 상태와 사용자의 지시에 대한 효과를 보여주어 사용자가 명령에 대한 진행 상황과 표시된 내용을 해설할 수 있도록 도와준다.

// - UI 설계시 고려사항
// 1) 사용자 중심
// 사용자가 이해하기 쉽고 편하게 사용할 수 있는 환경을 제공해야 하므로 실 사용자에 대한 이해가 바탕이 되어야 함.
// 2) 일관성
// 버튼이나 조작 방법을 사용자가 기억하기 빠르고 쉽게 습득할 수 있도록 설계해야 함.
// 3) 단순성
// 조작 방법은 가장 간단하게 작동되도록 하여 인지적 부담을 최소화해야 함.
// 4) 결과 예측 가능
// 작동시킬 기능만 보고도 결과 예측이 가능해야 함.
// 5) 가시성
// 주요 기능을 메인 화면에 노출하여 쉬운 조작이 가능해야 함.
// 6) 표준화
// 디자인을 표준화하여 기능 구조의 선행 학습 이후 쉽게 사용 가능해야 함.
// 7) 접근성
// 사용자의 직무, 연령, 성별 등이 고려된 다양한 계층을 수용해야 함.
// 8) 명확성
// 사용자가 개념적으로 쉽게 인지해야 함.
// 9) 오류 발생 해결
// 사용자가 오류에 대한 상황을 정확하게 인지할 수 있어야 함.

// - UI 오류 메시지나 경고에 관한 지침
// 1) 직관성(Intuitiveness) : 누구나 쉽게 이해하고, 쉽게 사용할 수 있어야 함.
// 2) 유효성(Effectiveness) : 정확하고 완벽하게 사용자의 목표가 달성될 수 있도록 제작해야 함.
// 3) 학습성(Learnability) : 초보자와 숙련자 모두 쉽게 배우고 사용할 수 있게 제작해야 함.
// 4) 유연성(Flexibility) : 사용자의 인터랙션을 최대한 포용하고, 실수를 방지할 수 있도록 제작해야 함.

// - UI의 상호작용 방식에 따른 구분
// 1) CLI(Command Line Interface)
// 텍스트 형태 인터페이스.
// 2) GUI(Graphical User Interface)
// 마우스로 선택하여 작업하는 그래픽 환경 인터페이스.
// 3) NUI(Natural User Interface)
// 사용자의 말이나 행동으로 기기를 조작하는 인터페이스.
// 멀티 터치(Multi-touch), 동작 인식(Gesture Recognition) 등 사용자의 자연스러운 움직임을 인식하여 서로 주고받는 정보를 제공하는 사용자 인터페이스를 의미한다.
// 4) VUI(Voice User Interface)
// 사람의 음성으로 기기를 조작하는 인터페이스.
// 5) OUI(Organic User Interface)
// 모든 사물과 사용자 간의 상호작용을 위한 인터페이스.
