// 암호화(Encryption)
// 특별한 지식을 소유한 사람들을 제외하고는 누구든지 읽어볼 수 없도록 알고리즘을 이용하여 정보(평문을 가리킴)를 전달하는 과정이다.
// 이러한 과정을 통해 암호화된 정보(암호문)를 낳는다.

// - Message(MSG) : 암호학에서 'Message'는 암호화할 원래의 평문을 의미한다.
// - 기밀성(Confidentiality)
// 보안의 세 가지 요소 중 하나로, 정보를 오직 인가(Authorization)된 사람들에게만 공개하는 것을 의미한다.
// 전송되는 데이터의 내용을 완벽하게 보호해 비인가자가 정보의 실제 내용에 접근하는 것을 방지하는 보안서비스이다.
// - 인증(Authentication)
// 로그인 요청 등을 통해 통신 상에서 보내는 사람의 디지털 정체성을 확인하는 시도의 과정이다.
// - 무결성(Integrity)
// 신뢰할 수 있는 서비스 제공을 위해서 의도하지 않은 요인에 의해 데이터, 소프트웨어, 시스템 등이
// 변경되거나 손상되지 않고 완전성, 정확성, 일관성을 유지함을 보장하는 특성.
// - 부인방지(Non-repudiation)
// 메시지의 송수신이나 교환 후 또는 통신이나 처리가 실행된 후에 그 사실을 사후에 증명함으로써 사실 부인을 방지하는 보안 기술.

// - 대칭키 암호 알고리즘(Symmetric-key Algorithm) == 비밀키 암호화 방식
// 암호화 할 때의 Key와 복호화 할 때의 Key 값이 같으면 "대칭키"라고 한다.
// 대칭키를 사용하는 암호화 알고리즘을 대칭키 암호 알고리즘이라고 하고, 대표적으로 SEED, DES, DES3, AES가 있다.
// 암호화, 복호화할 때 동일한 키(하나의 키)를 사용하는 방식을 말한다.
// 자신의 키로 MSG를 암호화하고, 키를 수신자에게 비밀리에 보내면 수신자는 전달받은 키로 복호화를 하여 평문을 얻는 방식이다.
// 단점 : 교환 당사자간에 동일한 키를 공유해야 하기 때문에 키 전달 및 관리에 어려움이 있고 키가 공격자에게 노출되면 보안에 매우 취약해진다.
// 장점 : 비대칭 암호화 방식에 비해 키 사이즈가 상대적으로 작고 암호 알고리즘 구조가 간단하여 연산속도가 빨라 효율적인 암호 시스템을 구축할 수 있다.
// 대칭키 암호 알고리즘의 단점을 보완하기 위해 공개키 암호화 방식이 탄생했다.
// 키 길이는 64비트, 128비트 등으로 비대칭키 암호 알고리즘에 비해 크기가 작다.
// 키를 교환하는 것이 매우 까다로우며 위험하다.
// 암호화할 수 있는 평문의 길이에 제한이 없다.
// 기밀성, 인증, 무결성이 부분적으로 가능하고, 부인방지는 불가능하다.

// - 대표적인 대칭키 암호 알고리즘 AES()
// 128비트의 블록 암호이고, Cipher(사이퍼) Key로 평문을 암호화한다.
// 평문과 Cipher Key의 Add Round Key, Sub Byte, Shift Row, Mix Column 과정을 반복하여 암호화 수행.

// - 비대칭키 암호 알고리즘(Asymmetric-key Algorithm) == 공개키 암호화 방식
// 암호화 할 때의 Key와 복호화 할 때의 Key 값이 다르면 "비대칭키"라고 한다.
// 비대칭키를 사용하는 암호화 알고리즘을 비대칭키 암호 알고리즘이라고 하고, 대표적으로 RSA가 있다.
// 암호화할 때 사용하는 키를 사람들에게 공개하는 방식을 말한다.
// 아무나 이 키를 가지고 암호화를 수행할 수 있지만, 복호화를 하는 개인키는 사용자만 가지고 있기 때문에 암호화된 문장은 사용자만 복호화할 수 있다.
// 암호화 키와 복호화 키가 다르다(비대칭키 방식).
// 대칭키 알고리즘에 비해 속도가 느리다.
// 각자의 공개키와 개인키를 생성하여 공개키는 공개하고 사용자는 개인키만 관리한다.
// 공개키를 교환하는 것은 매우 쉽다.
// 키 길이가 512, 1024, 2048 비트 등으로 대칭키 암호 알고리즘에 비해 크기가 크다.
// 암호화 할 수 있는 평문의 길이에 제한이 있다.
// 기밀성, 인증, 무결성, 부인방지가 모두 가능하다.

// - 비대칭 암호 알고리즘 동작 과정
// 1) A가 B에게 공개키 알고리즘으로 메시지를 송신하고자 한다.
// 2) A(송신자)는 B(수신자)의 공개키를 받아 보내고자 하는 MSG를 암호화하여 B에게 전송한다.
// 3) 그러면 B는 자신의 개인키로 MSG를 복호화해서 평문을 얻는다.

// - 대표적인 비대칭키 암호 알고리즘 RSA()
// 두 개의 키를 사용하는데, 공개키(Public Key)와 개인키(Private Key)이다.
// 공개키는 모두에게 공개되어 있고 메시지를 암호화하는 데에 사용한다.
// 개인키는 특정 사용자만이 가지고 있고 암호화된 메시지를 복호화하는 데에 사용한다.
// 일반적으로는 위 설명과 같지만, RSA 공개키 알고리즘은 개인키로 암호화하여 공개키로 복호화할 수도 있고 별다른 제약조건이 없다.
