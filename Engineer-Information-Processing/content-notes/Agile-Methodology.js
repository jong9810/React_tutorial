// - Scrum : 쇄도하는 사람들

// - 애자일 방법론(Agile Methodology)
// 애자일(Agile) : 날렵한, 민첩한, 기민한이라는 뜻으로, 소프트웨어 개발 방법론 중 하나인 애자일 프로세스에서 처음 사용되었다.

// - 애자일 개발 프로세스
// 개발에 대한 개념적 방법론으로, 개발 프로젝트 기간을 짧은 주기로 나눠 반복적인 개발을 하는 것이 특징이다.
// 고객 관점의 효율적이고 민첩한 변화 대응을 중시한다.

// - 애자일 선언문
// "프로세스, 도구보다는 (사람과 상호작용)을
// 광범위한 문서보다는 (실제 작동하는 제품)을
// 계약, 협상보다는 (고객 협력)을
// 계획을 따르기보다는 (변화 대응)을"

// - 애자일 방법론 종류

// 1) 익스트림 프로그래밍(Extreme Programming)
// 소규모 개발 조직이 불확실하고 변경이 많은 요구를 접하였을 때 적절한 방법이다.
// 익스트림 프로그래밍을 구동시키는 원리는 상식적인 원리와 경험을 최대한 끌어올리는 것이다.
// 구체적인 실천 방법을 정의하고 있으며, 개발 문서보다는 소스코드에 중점을 둔다.

// 2) 스크럼(Scrum)
// 프로젝트 관리를 위한 상호, 점진적 개발방법론이며, 애자일 소프트웨어 개발 중의 하나이다.
// 스크럼(Scrum)은 소프트웨어 개발 프로젝트를 위하여 고안되었지만, 소프트웨어 유지보수 팀이나 일반적인 프로젝트/프로그램 관리에서도 적용될 수 있다.
// - 스크럼의 특성
// 스크럼은 특정 언어나 방법론에 의존적이지 않으며, 개발 언어는 물론이고 객체지향 언어와도 관련이 없는 넓은 응용 범위의 개발 기법이다.
// 1) 솔루션에 포함할 기능/개선점에 대한 우선 순위를 부여한다.
// 2) 개발 주기는 30일 정도로 조절하고 개발 주기마다 실제 동작할 수 있는 결과를 제공하라.
// 3) 개발 주기마다 적용할 기능이나 개선에 대한 목록을 제공하라.
// 4) 날마다 15분 정도 회의를 가져라.
// 5) 항상 팀 단위로 생각하라.
// 6) 원활한 의사소통을 위하여, 구분 없는 열린 공간을 유지하라.
// - 지식 창조 프로세스를 촉진시키는 5가지 요소
// 1) 조직의 의도
// 지식 창조의 목표나 팀을 지탱하는 축
// 2) 자율성
// 팀의 멤버에게 자유로운 행동을 인정하는 열린 환경(시스템)
// 3) 역동적이고 창조적인 카오스
// 조직 내 외부 간의 역동적인 상호작용을 통한 지식창조 환경
// 4) 잉여성
// 의도적으로 조직에 넘쳐나는 여분의 정보
// 5) 최소 유효 다양성
// 복잡하고 다양한 환경에 기민하게 대응하기 위해서는 조직 구성원이 가져야 하는 다양성
// - 스크럼이 추구하는 가치
// 1) 확약
// 약속한 것을 확실히 실현하는 것
// 2) 전념
// 확약한 것의 실현에 전념하는 것
// 3) 정직
// 어떤 것이 자신에게 불리해도 숨기지 않는 것
// 4) 존중
// 자신과 다른 사람에게 경의를 표하는 것
// 5) 용기
// 팀 구성원은 자신이 옳은 일을 할 수 있도록 팀원간 갈등과 도전을 통해 작업할 수 있는 용기
// - 스크럼의 진행
// 스크럼에서는, 30일간의 주기로 실제 동작하는 제품을 만들면서 개발을 진행시킨다.
// 일반적인 권장기간은 30일이지만, 스크럼 적응도 및 진행 상황에 따라 1 ~ 4주의 유연성을 가진다.
// - 스크럼 진행시 나타나는 중요 요소
// 1) 제품 백로그(Product Backlog)
// 개발할 제품에 대한 요구 사항 목록
// 2) 스프린트(Sprint)
// 반복적인 개발 주기(회사에서 정하는 이터레이션이 개발 주기가 됨. 계획 회의부터 제품 리뷰가 진행되는 날짜까지의 기간이 1스프린트)
// 3) 스프린트 계획 회의(Sprint Planning Meeting)
// 스프린트 목표와 스프린트 백로그를 계획하는 회의
// 4) 스프린트 백로그(Sprint Backlog)
// 각각의 스프린트 목표에 도달하기 위해 필요한 작업 목록
// 5) 일일 스크럼 회의(Daily Scrum Meeting)
// 날마다 진행되는 미팅(어제 한일, 오늘 할일, 장애 현상 등을 공유)
// 6) 실행 가능한 제품(shippable product) 개발
// 스프린트의 결과로써 나오는 실행 가능한 제품
// - 스크럼 절차
// 1) 제품에서 요구하는 기능과 우선순위를 제품 백로그로 정한다.
// 2) PO가 정한 제품의 우선순위에서 어디까지 작업을 할지 팀과 조율 한다. 조율하여 선정된 제품 백로그가 이번 스프린트의 목표가 된다.
// 3) 스프린트 목표를 구현 가능 하도록 팀에서 스프린트 백로그를 작성한 뒤 작업을 할당한다.
// 4) 스프린트를 진행하는 동안, 매일 정해진 장소와 시간에 모든 개발 팀원이 참여하는 일일 스크럼 회의를 가진다.
// 5) 매회의 스프린트가 종료할 때마다, 스프린트 리뷰 미팅을 통해 만들어진 제품을 학습하고 이해 한다.
// 6) 제품의 학습과 이해가 끝나면, 스프린트 회고를 통해 팀의 개발 프로세스에 대한 개선의 시간을 갖는다.
// 7) 스프린트 기간 중 다음 스프린트를 준비 하기 위해 PO와 필요 인원이 모여 백로그를 준비하는 시간을 갖는다.
// - 개발 팀원 이외에 스크럼 직책
// 1) 제품 책임자(Product Owner)
// 제품 백로그를 정의하여 우선순위를 정해 준다.
// 제품 책임자는 스프린트 목표와 백로그등의 결정에 있어 중심이 되는 상위 관리자이다.
// 제품 책임자가 독단적으로 목표를 결정하지 않고, 고객과 관리자 및 팀원들이 모여서 목표를 정한다.
// 2) 스크럼 마스터(Scrum Master)
// 프로젝트 관리자(코치)
// 스크럼 마스터는, 일반적인 관리를 수행하는 프로젝트 관리자들과는 달리 팀원을 코칭하고 프로젝트의 문제 상황을 해결하는 역할을 한다.
