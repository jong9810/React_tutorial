// - 메트릭(Metric)
// IT 분야에서는 데이터들을 시각화해서 우리들에게 보여주는 툴
// 보편적으로는 metric이란 우리가 대시보드를 볼때 특정 수치들을 그래프로 보여주는 일종의 시각화
// 메트릭은 CPU사용량, 시간당 데이터 처리량, 분당 네트워크 속도 등의 것을 우리에게 보여주고
// 현재 파이프라인에서 알맞게 잘 돌아가고 있는지, 만약 outlier가 있다면 어떻게 대처해야 하는지에 대한 의사결정을 도와준다.

// - 라우터(Router)
// 둘 혹은 그 이상의 네트워크와 네트워크 간 데이터 전송을 위해 최적 경로를 설정해주며
// 데이터를 해당 경로를 따라 한 통신망에서 다른 통신망으로 통신할 수 있도록 도와주는 인터넷 접속 장비이다.

// - 라우팅(Routing)
// 패킷을 전송하기 위해 송신측에서 목적지까지의 경로를 정하고 정해진 경로를 따라 패킷을 전달하는 과정을 말한다.
// 해당 알고리즘에는 최적의 경로를 찾는 방법, 관리자가 직접 테이블 설정하는 정적 라우팅 알고리즘과 정보 변화에 능동적으로 대처하는 동적 라우팅 알고리즘이 있다.
// 라우팅 프로토콜은 네트워크 정보의 생성, 교환을 제어한다.

// - 라우팅 프로토콜(Routing Protocol)
// 라우터가 패킷을 식별하고 네트워크 경로를 따라 전달하는 방법을 지정하는 규칙 세트입니다.
// 라우팅 프로토콜은 내부 게이트웨이 프로토콜과 외부 게이트웨이 프로토콜이라는 2가지 범주로 분류됩니다.

// - 다익스트라 알고리즘
// 매번 방문하지 않은 노드 중에서 최단 거리가 가장 짧은 노드를 선택하여 한 단계씩 최단 거리를 구해나간다.
// 음수 간선이 없다면 최적의 해를 찾을 수 있다(음수 간선이 있으면 최적의 해가 아닐 가능성이 있음).
// 시간 복잡도가 빠르다.

// - Bellman-Ford 알고리즘
// 매 단계마다 모든 간선을 전부 확인하면서 모든 노드 간의 최단 거리를 구해나간다.
// 다익스트라 알고리즘과의 차이점은 매 반복마다 모든 간선을 확인한다는 것이다. 다익스트라는 방문하지 않은 노드 중에서 거리가 가장 가까운 노드만을 방문한다.
// 음수 간선이 있어도 최적의 해를 찾을 수 있다(음수 간선의 순환을 감지할 수 있음).
// 시간 복잡도가 다익스트라 알고리즘보다 느리다.
// 모든 간선이 양수이면 다익스트라, 음수 간선이 포함되어 있으면 벨만-포드 알고리즘을 사용하면 된다.
// - Bellman-Ford 알고리즘 수행과정
// 1) 출발 노드를 설정한다.
// 2) 최단 거리 테이블을 초기화한다.
// 3) 다음의 과정을 V(정점의 개수 - 1)번 반복한다.
//    - 모든 간선 E개를 하나씩 확인한다.
//    - 각 간선을 거쳐 다른 노드로 가는 비용을 계산하여 최단 거리 테이블을 갱신한다.
// 4) 만약 음수 간선 순환이 발생하는지 체크하고 싶다면 3번 과정을 한번 더 수행한다.
//    - 이때 최단 거리 테이블이 갱신된다면 음수 간선 순환이 존재하는 것이다.
// 시간 복잡도는 O(VE)이다.

// - 홉(Hop)
// 출발지 부터 목적지까지 지나치는 장비(라우터)의 수를 의미하고 RIP은 이를 매트릭으로 사용한다.
// 최대 Hop수는 16으로 15개까지는 패킷을 전달하지만, 매트릭이 16이 되면 그 경로는 유효하지 않다고 판단한다.

// - 라우팅 프로토콜 구분
// 정보갱신에 따라 정적 라우팅 프로토콜(Static Routing Protocol), 동적 라우팅 프로토콜(Dynamic Routing Protocol)로 구분한다.
// 1) 정적 라우팅 프로토콜
// 정적으로 Routing 경로를 지정해주는 Protocol이다.
// 네트워크 변화에 수동적이며, 라우터 추가, 변경 회선 등 자동 인지가 불가능하다.
// 구성이 매우 간단하고, 원하는 경로로 패킷을 보낼 수 있다.
// 관리 부담의 증가 및 정해진 경로 문제 발생시 해결할 때까지 Routing이 불가능하다.
// 단일 경로에 적합하며, 주로 Stub network에 적용한다.
// 2) 동적 라우팅 프로토콜
// 동적으로 Routing 경로를 할당할 수 있게 해주는 Protocol이다.
// 네트워크 변화에 자동적으로 인지하고 정보 전송경로를 재구성할 수 있다.
// Protocol을 올리면 스스로 경로를 선택할 수 있도록 해준다.
// 다중 경로에 적합하며, RIP, IGRP, EIGRP, OSPF 등이 있다.

// - 동적 라우팅 프로토콜은 내부 프로토콜인지 외부 프로토콜인지에 따라 IGP, EGP로 구분한다.
// 1) IGP(Interior Gateway Protocol)
// 네트워크 집합을 몇 개의 그룹으로 나누었을 때, 동일 그룹 내에서 라우팅 정보를 교활할 때 사용하는 라우팅 프로토콜이다.
// 같은 도메인 내에 존재하는 라우터는 도메인 내부 라우터가 되고 도메인 외부에 존재하는 라우터는 도메인 외부 라우터가 된다.
// 이때, 도메인 내부 경로 설정에 대한 프로토콜은 ISP(Internet Service Provider)이라고 한다.
// 쉽게 말해 IGP는 내부 경로 설정을 하는 Protocol이다.
// - IGP 종류
// 거리벡터 알고리즘 : RIP(Routing Information Protocol), IGRP(Interior Gateway Routing Protocol), EIGRP(Enhanced Interior Gateway Routing Protocol)
// 링크상태 알고리즘 : OSPF(Open Shortest Path First)
// 2) EGP(Exterior Gateway Protocol)
// 다른 그룹과 라우팅 정보를 교환하는 프로토콜이다.
// 시스템 사이에 경로 설정 정보 등을 교환하기 위해 사용하는 프로토콜이다.
// 다른 도메인 사이에 라우팅시 정리된 관리가 거의 없고 많은 경우에 신용도가 매우 낮아 빠른 수행보다는 보안과 제어가 EGP의 원래 목적이다.
// 쉽게 말해 EGP는 외부 경로 설정을 위한 Protocol이다.
