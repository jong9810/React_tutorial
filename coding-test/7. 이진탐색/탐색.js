// 1. 순차 탐색(Sequential Search)
// 리스트 안에 있는 특정한 데이터를 찾기 위해 앞에서부터 데이터를 하나씩 차례대로 확인하는 방법
// 보통 정렬되지 않은 리스트에서 데이터를 찾아야 할 때 사용한다.
// 리스트 내에 데이터가 아무리 많아도 시간만 충분하다면 항상 원하는 원소를 찾을 수 있다.
// 순차탐색은 시간 복잡도가 최악의 경우 O(N)이다.

// 2. 이진 탐색(Binary Search)
// 이진 탐색은 탐색의 범위를 절반으로 좁혀가며 데이터를 탐색하는 알고리즘이다.
// 이진 탐색은 배열 내부의 데이터가 정렬되어 있어야만 사용할 수 있다.
// 이진 탐색은 데이터를 절반으로 줄여가면서 탐색하므로 시간 복잡도가 O(log2N)이다.

// 이진탐색 과정
// 1) 정렬된 리스트의 처음값과 끝값, 중간값을 초기화한다(중간값 : 처음값과 끝값의 절반 지점에 위치하는 데이터).
// 2) 중간값과 찾으려는 값을 비교하여 중간값이 더 크면, 끝값을 중간값 바로 전 값으로 변경한다.
// 3) 중간값이 더 작으면, 처음값을 중간값 바로 다음 값으로 변경한다.
// 4) 다시 중간값을 찾는다.
// 5) 2) ~ 4) 과정을 처음값, 끝값, 중간값 중 하나가 찾으려는 값과 같아질 때까지 반복한다.
